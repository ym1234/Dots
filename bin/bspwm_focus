#!/bin/sh
#
# focus windows

# exit when fullscreen
bspc query -N -n focused.fullscreen > /dev/null && exit

windows () {
	case $1 in
		focused) bspc query -N -n .local.focused.\!fullscreen;;
		normal)  bspc query -N -n .local.\!focused.\!fullscreen
	esac
}

case $1 in
    east)  dim=xy; sign='<'; op=-gt;;
    west)  dim=xy; sign='>'; op=-lt;;
    north) dim=yx; sign='>'; op=-lt;;
    south) dim=yx; sign='<'; op=-gt
esac

# get values for the current window
wattr "$dim" $(windows focused) |
{
    read -r cur_1 cur_2

    # get values for all other windows
    wattr "i$dim" $(windows normal) |
    {
        # sort windows
        while read -r win win_1 win_2; do
            [ "$win_1" "$op" "$cur_1" ] &&
                case $((min_1 ? win_1 $sign min_1 ? 0 : win_1 == min_1 && win_2 $sign min_2 ? 1 : 2 : 3)) in
                    0|1|3) min_1=$win_1; min_2=$win_2; focus=$win
                esac
        done

        # exit if there is no window to focus
        test "$focus" || exit

        # teleport cursor on the focused window
        bspc config pointer_follows_focus true
        bspc node "$focus" -f
        bspc config pointer_follows_focus false
    }
}
